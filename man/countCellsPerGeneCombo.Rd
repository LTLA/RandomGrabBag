% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/countCellsPerGeneCombo.R
\name{countCellsPerGeneCombo}
\alias{countCellsPerGeneCombo}
\title{Count gene combinations}
\usage{
countCellsPerGeneCombo(
  x,
  gene.field,
  group = NULL,
  cov.field = NULL,
  downsample = FALSE,
  down.ncells = NULL,
  row.names = TRUE
)
}
\arguments{
\item{x}{A \linkS4class{SplitDataFrameList} where each \linkS4class{DataFrame} is a cell and each row is a sequence.}

\item{gene.field}{Character vector of names of columns of \code{x} containing the genes of interest (e.g., VDJ components).}

\item{group}{Factor of length equal to \code{x} indicating the group to which each cell belongs.}

\item{cov.field}{String specifying the column of \code{x} containing the read/UMI coverage.}

\item{downsample}{Logical scalar indicating whether downsampling should be performed.}

\item{down.ncells}{Integer scalar indicating the number of cells to downsample each group to.
Defaults to the number of cells in the smallest group in \code{group}.}

\item{row.names}{Logical scalar indicating whether row names should be added by concatenating all gene names per combination.}
}
\value{
A \linkS4class{SummarizedExperiment} where each row corresponds to a unique gene combination
and each column corresponds to a level of \code{group} (or all cells, if \code{group=NULL}).
The \code{assays} contain a single matrix containing the number of cells for each gene combination and grouping level,
while the \code{rowData} contains information about the gene combination.
}
\description{
Count the number of cells that express each unique combination of genes.
}
\details{
The aim of this function is to generate a count matrix for use in differential \dQuote{expression} analyses,
i.e., does one particular group of cells express a particular gene combination more frequently than another group? 
This can be useful to examine the effect of particular experimental conditions or the behavior of different cell states,
especially if the specific biological function (e.g., antigen) of each gene combination is known in advance.

If \code{cov.field} is set, only the most high-abundance sequence is used from each cell.
It is probably safest to set this field to avoid potential complications from dependencies between counts,
though any problems are also probably minor.
}
\section{Normalization for cell number}{

Here, expression is defined in terms of number of cells expressing the gene,
rather than the more typical quantity of the number of reads or UMIs assigned to that gene.
If the sequencing coverage varies between groups, 
we assume that such changes have the same scaling effect on the probability of detecting each gene combination,
which cancels out after normalizing by the total number of cells.

However, the above assumption only works for differential expression analyses between groups.
When comparing other metrics such as diversity values (see \code{\link{summarizeGeneComboCounts}}),
scaling normalization is not sufficient and we instead resort to downsampling all groups to the same total cell number.
This is achieved with \code{downsample=TRUE} with the automatically determined \code{down.ncells},
which eliminates uninteresting technical differences between groups from cell capture efficiency or sample size.
}

\examples{
df <- data.frame(
    cell.id=sample(LETTERS, 30, replace=TRUE),
    v_gene=sample(c("TRAV1", "TRAV2", "TRAV3"), 30, replace=TRUE),
    j_gene=sample(c("TRAJ4", "TRAJ5", "TRAV6"), 30, replace=TRUE)
)

y <- splitToCells(df, field="cell.id")
out <- countCellsPerGeneCombo(y, c("v_gene", "j_gene"))
rowData(out)
assay(out)

out2 <- countCellsPerGeneCombo(y, c("v_gene", "j_gene"), 
   group=sample(10, length(y), replace=TRUE))
rowData(out2)
assay(out2)

}
\author{
Aaron Lun
}
