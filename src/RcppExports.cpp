// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// permute_diversity
Rcpp::List permute_diversity(Rcpp::IntegerVector left, Rcpp::IntegerVector right, int iterations, bool use_gini, Rcpp::IntegerVector use_hill, Rcpp::IntegerVector seed, int stream);
RcppExport SEXP _RepertoireUtils_permute_diversity(SEXP leftSEXP, SEXP rightSEXP, SEXP iterationsSEXP, SEXP use_giniSEXP, SEXP use_hillSEXP, SEXP seedSEXP, SEXP streamSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type left(leftSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type right(rightSEXP);
    Rcpp::traits::input_parameter< int >::type iterations(iterationsSEXP);
    Rcpp::traits::input_parameter< bool >::type use_gini(use_giniSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type use_hill(use_hillSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type seed(seedSEXP);
    Rcpp::traits::input_parameter< int >::type stream(streamSEXP);
    rcpp_result_gen = Rcpp::wrap(permute_diversity(left, right, iterations, use_gini, use_hill, seed, stream));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_RepertoireUtils_permute_diversity", (DL_FUNC) &_RepertoireUtils_permute_diversity, 7},
    {NULL, NULL, 0}
};

RcppExport void R_init_RepertoireUtils(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
